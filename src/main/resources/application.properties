spring.application.name=gateway
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=when_authorized
spring.jmx.enabled=false
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=5000
spring.sleuth.sampler.rate=5
logging.level.com.netflix.hystrix.AbstractCommand=DEBUG
server.port=8443
server.ssl.enabled=true
server.ssl.protocol=TLSv1.2
server.ssl.key-store=classpath:gateway-tls.jks
server.ssl.key-store-type=PKCS12
server.ssl.key-alias=gateway-tls
server.ssl.key-store-password=barfoo
#spring.cloud.stream.bindings.output.destination=request-log-dev
logging.level.org.springframework.kafka.core.KafkaTemplate=DEBUG
spring.kafka.template.default-topic=request-log-dev
spring.kafka.bootstrap-servers=kafka.dev.ik.am:17440
spring.kafka.jaas.enabled=true
spring.kafka.jaas.login-module=org.apache.kafka.common.security.scram.ScramLoginModule
spring.kafka.jaas.control-flag=required
spring.kafka.jaas.options.username=admin
spring.kafka.jaas.options.password=j985tuOLohqHhEcikba1uIoA2hFU4W
spring.kafka.producer.properties.security.protocol=SASL_SSL
spring.kafka.producer.properties.sasl.mechanism=SCRAM-SHA-256
spring.kafka.consumer.properties.security.protocol=${spring.kafka.producer.properties.security.protocol}
spring.kafka.consumer.properties.sasl.mechanism=${spring.kafka.producer.properties.sasl.mechanism}
spring.kafka.admin.properties.security.protocol=${spring.kafka.producer.properties.security.protocol}
spring.kafka.admin.properties.sasl.mechanism=${spring.kafka.producer.properties.sasl.mechanism}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer